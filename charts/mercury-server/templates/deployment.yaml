apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mercury-server.fullname" . }}
  labels:
    {{- include "mercury-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  serviceName: {{ include "mercury-server.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: postgres
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.db.capacity }}  
  selector:
    matchLabels:
      {{- include "mercury-server.selectorLabels" . | nindent 6 }}
      app: {{ include "mercury-server.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mercury-server.selectorLabels" . | nindent 8 }}
        app: {{ include "mercury-server.fullname" . }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mercury-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: mercury-db-config-map
          configMap:
            name: mercury-db-cm
        - name: mercury-server-config-map
          configMap:
            name: mercury-server-cm
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.imageRepo }}:{{ .Values.imageTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagPullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: ws-rpc
              containerPort: {{ .Values.service.rpcPort }}
          # TODO: Fix when /health fixed https://smartcontract-it.atlassian.net/browse/MERC-178    
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: PORT
              value: '3000'
            - name: DATABASE_URL
              value: 'postgresql://postgres:verylongdatabasepassword@localhost:5432/mercury?sslmode=disable'
            - name: AUTH_CLIENT_USER
              value: client
            - name: AUTH_CLIENT_PASSWORD
              value: clientpass
            - name: AUTH_NODE_USER
              value: node
            - name: AUTH_NODE_PASSWORD
              value: nodepass
            - name: RPC_NODES_PUBLIC_KEYS_JSON_PATH
              value: /etc/node-secrets-volume/rpcNodesConf.json
            - name: RPC_PRIVATE_KEY
              value: {{ .Values.rpcPrivateKey }}
            - name: RPC_PORT
              value: '1338'
            - name: RPC_HEALTHZ_PORT
              value: '1339'
          envFrom:
            - secretRef:
                name: {{ include "mercury-server.fullname" . }}
          volumeMounts:
            - mountPath: /etc/node-secrets-volume/rpcNodesConf.json
              name: mercury-server-config-map
              subPath: rpcNodesConf.json
        - name: mercury-db
          image: postgres:11.15
          command:
            - docker-entrypoint.sh
          args:
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.track=all"
          ports:
            - name: postgres
              containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: mercury
            - name: POSTGRES_PASSWORD
              value: verylongdatabasepassword
            - name: PGPASSWORD
              value: verylongdatabasepassword
            - name: PGUSER
              value: postgres
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 1
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 1
            periodSeconds: 5
          startupProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 20
          resources:
            requests:
              memory: {{ .Values.db.resources.requests.memory }}
              cpu: {{ .Values.db.resources.requests.cpu }}
            limits:
              memory: {{ .Values.db.resources.limits.memory }}
              cpu: {{ .Values.db.resources.limits.cpu }}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init.sql
              name: mercury-db-config-map
              subPath: init.sql
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
