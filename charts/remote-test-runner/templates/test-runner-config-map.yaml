apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: remote-test-runner-cm
    release: {{ .Release.Name }}
  name: remote-test-runner-cm
data:
  test-env.json: |
    {{ .Values.remote_test_runner.config_file_contents }}
  init.sh: |
    #!/bin/sh
    set -x

    # Steps to use this
    # 1. Push up a test repo as ztarrepo.tar.gz to /root/
    # 2. Push up or create an empty file at /root/start.txt
    # Once the start.txt file has been created the test will begin

    TAR_FILE=/root/ztarrepo.tar.gz
    REPO_SRC=/root/src
    
    echo "Adding private Helm repos"
    helm repo add chainlink-qa https://raw.githubusercontent.com/smartcontractkit/qa-charts/gh-pages/

    echo "Installing ginkgo"
    go install github.com/onsi/ginkgo/v2/ginkgo@v"{{ .Values.remote_test_runner.ginkgo_version }}"

    echo "Waiting for $START_FILE to start being copied"
    until [ -f $START_FILE ]
    do
      sleep 1
    done
    echo "Found $START_FILE"

    echo "The start file has been created, check if the test repo is present."
    if [ ! -f "${TAR_FILE}" ]; then
      echo "Test repo was not present in ${REPO_SRC}"
      exit 1
    fi

    cd /root/
    mkdir ${REPO_SRC}
    tar -zxf ztarrepo.tar.gz -C ${REPO_SRC}

    echo "Running test..."
    echo "Connecting to namespace {{ .Values.remote_test_runner.env_namespace }}"
    cd "${REPO_SRC}/usr/src/" || echo "Failed to cd into ${REPO_SRC}/usr/src/ before running test"
    CGO_ENABLED=1 \
    ENV_NAMESPACE={{ .Values.remote_test_runner.env_namespace }} \
    ginkgo \
    --timeout=0 \
    -v -r \
    --focus {{ .Values.remote_test_runner.focus }} \
    {{ .Values.remote_test_runner.test_dir }}
